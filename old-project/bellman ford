def bellman(g,s):
    distance = [float("Inf")] * len(g)
    distance[s] = 0

    for _ in range(len(g) - 1):
        for u, v, w in g:
            if distance[u] != float("Inf") and distance[u] + w < distance[v]:
                distance[v] = distance[u] + w

    for u, v, w in g:
        if distance[u] != float("Inf") and distance[u] + w < distance[v]:
            print("negative weight cycle")
            return

    return distance
    
g = [(0, 1, -1), (0, 2, 4), (1, 2, 3), (1, 3, 2), (1, 4, 2), (3, 2, 5), (3, 1, 1), (4, 3, -3)]
distances = bellman(g,0)
print(distances)
