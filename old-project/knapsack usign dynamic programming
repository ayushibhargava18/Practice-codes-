def knapsack(maxw, weight, profit, n):
    dp = [[0 for _ in range(maxw + 1)] for _ in range(n + 1)]

    for i in range(1, n + 1):
        for w in range(1, maxw + 1):
            if weight[i - 1] <= w:  
                dp[i][w] = max(dp[i - 1][w], dp[i - 1][w - weight[i - 1]] + profit[i - 1])
            else:
                dp[i][w] = dp[i - 1][w]  
    max_profit = dp[n][maxw]

    items_included = []
    w = maxw
    for i in range(n, 0, -1):
        if dp[i][w] != dp[i - 1][w]:  
            items_included.append(i - 1)  
            w -= weight[i - 1]  

    return max_profit, items_included, dp

profit = [20, 30, 40]
weight = [7, 13, 5]
maxw = 20
n = len(profit)

result, items_included, dp_table = knapsack(maxw, weight, profit, n)

print("DP Table:")
for row in dp_table:
    print(row)

print(f"\nMax profit: {result}")
print("Items included:", items_included)
print("Weights of included items:", [weight[i] for i in items_included])
print("Profits of included items:", [profit[i] for i in items_included])


